output: default
streamtags: []
groups: {}
asyncFuncTimeout: 1000
functions:
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: "IMPORTANT:  Select the three grey bars ||| top left and enable the
        Description option"
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Parse _raw XML to JSON & clean up whitespace
  - id: eval
    filter: "true"
    disabled: false
    conf:
      add:
        - disabled: false
          name: _raw
          value: _raw.replace(/\n\s+/gm,'\n')
        - disabled: false
          name: _raw
          value: _raw.replace(/\t/gm,'')
        - disabled: false
          name: _raw
          value: _raw.replace(/, /gm,',')
        - name: _raw
          value: C.Text.parseWinEvent(_raw,[])
          disabled: false
      remove: []
    description: Parse _raw XML to a JSON & remove fields with values in brackets
    final: false
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Flatten fields to top level
  - id: flatten
    filter: "true"
    disabled: false
    conf:
      fields:
        - _raw
      prefix: ""
      depth: 5
      delimiter: _
    description: Flatten fields to top level
    final: false
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Clean up nested names
  - id: rename
    filter: "true"
    disabled: null
    conf:
      wildcardDepth: 5
      renameExpr: "name.startsWith('_raw_') ?
        name.replace(/_raw_Event_(?:EventData|System|RenderingInfo)_/,'').repla\
        ce(/ /g,'_').replace(/__value/,'') : name"
      rename: []
    final: false
    description: Rename expression
  - id: rename
    filter: "true"
    disabled: null
    conf:
      wildcardDepth: 5
      rename:
        - currentName: EventID_Qualifiers
          newName: Qualifiers
        - currentName: Provider_EventSourceName
          newName: SourceName
        - currentName: Provider_Guid
          newName: Guid
        - currentName: Provider_Name
          newName: Name
        - currentName: Execution_ProcessID
          newName: ProcessID
        - currentName: Execution_ThreadID
          newName: ThreadID
        - currentName: EventRecordID
          newName: RecordID
      renameExpr: "name.startsWith('Data_param') ? name.replace(/Data_/,'') : name"
    description: Manual rename
    final: false
  - id: auto_timestamp
    filter: "true"
    disabled: null
    conf:
      srcField: TimeCreated_SystemTime
      dstField: _time
      defaultTimezone: local
      timeExpression: time.getTime() / 1000
      offset: 0
      maxLen: 150
      defaultTime: now
      latestDateAllowed: +1week
      earliestDateAllowed: -420weeks
    final: false
    description: Set time
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Drop unnecessary fields
  - id: eval
    filter: "true"
    disabled: null
    conf:
      remove:
        - TimeCreated_SystemTime
      add:
        - disabled: false
          name: Guid
          value: Guid.replace(/[{}]/g,'')
    description: Fix GUID & Drop unnecessary fields
    final: false
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Push all fields that begin with Data_ into a new field called Data
  - id: code
    filter: "true"
    disabled: false
    conf:
      maxNumOfIterations: 5000
      code: >-
        // Create an empty object to store the extracted data fields

        var data = {};


        // Iterate over all the keys in the __e object

        for (const key in __e) {
          // Check if the key starts with 'Data_' and if it is an own property of the __e object
          if (Object.hasOwn(__e, key) && key.match(/Data_\d+/)) {
            // Create a new key for the modified field name by removing 'Data_' from the beginning of the current key
            const newKey = key.substring(5);

            // Check if the current field has a truthy value, and if so, add it to the data object with the modified key name
            if (__e[key]) {
              data[newKey] = __e[key];
            }

            // Delete the current field from the __e object since it has been extracted
            delete __e[key];

            // Check if any data fields were extracted before adding them to the __e object as a new 'Data' field
          }

        }


        if (Object.keys(data).length > 0) {
          __e['Data'] = Object.values(data)
        }
    description: Push all fields that begin with Data_\d+ into a new field called Data.
    final: false
  - id: rename
    filter: "true"
    disabled: null
    conf:
      wildcardDepth: 5
      renameExpr: "name.startsWith('Data_') ? name.replace(/Data_/,'') : name"
    final: false
    description: Rename remaining Data fields using an expression
  - id: mask
    filter: "true"
    disabled: false
    conf:
      rules:
        - disabled: false
          matchRegex: /^{/
          replaceExpr: "''"
        - disabled: false
          matchRegex: /}$/
          replaceExpr: "''"
      fields:
        - Data*
      depth: 5
    final: false
    description: Remove curly braces in Data Fields
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Serialize fields to _raw
  - id: serialize
    filter: "true"
    disabled: false
    conf:
      type: json
      dstField: _raw
      fields:
        - "!_*"
        - "!cribl_*"
        - "!index"
        - "!source"
        - "!sourcetype"
        - "!host"
        - "!punct"
        - "!time*pos*"
        - "!before*"
        - "!date_*"
        - "*"
      cleanFields: false
    description: Serialize fields into _raw
    final: false
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Create JSON Object from JSON string and drop nonessential fields
  - id: eval
    filter: "true"
    disabled: false
    conf:
      remove:
        - "*"
      keep:
        - _raw*
        - _time*
        - cribl_pipe*
        - cribl_breaker*
        - index
        - source
        - sourcetype
        - host
        - hf*
        - punct*
        - date_*
        - time*pos*
        - before*
        - Account_Domain*
        - Account_Name*
        - Caller_Computer_Name*
        - Caller_Domain*
        - Caller_Logon_ID*
        - Caller_Machine_Name*
        - Caller_User_Name*
        - Change_Type*
        - Client_Address*
        - Client_Domain*
        - Client_Logon_ID*
        - Client_Machine_Name*
        - Client_User_Name*
        - ComputerName*
        - Creator_Process_Name*
        - Description*
        - Domain*
        - EventData_Xml*
        - EventID
        - EventRecordID
        - FileName*
        - File_Name*
        - File_Path*
        - Group_Domain*
        - Group_Type_Change*
        - Image_File_Name*
        - IpAddress*
        - IpPort*
        - KeyFilePath*
        - LogFileCleared_Xml*
        - LogonType*
        - Logon_Account*
        - Logon_ID*
        - Logon_account*
        - MemberName*
        - Member_ID*
        - Member_Name*
        - New_Account_Name*
        - New_Domain*
        - New_Process_Name*
        - ObjectName*
        - Object_Name*
        - Primary_Domain*
        - Primary_User_Name*
        - PrivilegeList*
        - Process_Command_Line*
        - RenderingInfo_Xml*
        - Security_ID*
        - Source_Network_Address*
        - Source_Workstation*
        - SubStatus*
        - SubjectDomainName*
        - SubjectLogonId*
        - SubjectUserName*
        - Supplied_Realm_Name*
        - System_Props_Xml*
        - TargetDomainName*
        - TargetProcessName*
        - TargetServerName*
        - TargetUserName*
        - Target_Account_ID*
        - Target_Account_Name*
        - Target_Domain*
        - Target_Process_Name*
        - Target_Server_Name*
        - Target_User_Name*
        - TokenElevationType*
        - Token_Elevation_Type*
        - User*
        - UserData_Xml*
        - User_ID*
        - User_Name*
        - Workstation*
        - WorkstationName*
        - Workstation_Name*
        - new_process*
        - nt_host*
        - param*
        - parent_process*
        - service_path*
        - signature*
        - signature_message*
        - vendor_privilege*
        - Privileges*
        - Computer
      add: []
    description: Keep fields needed by transforms at top level
